# -*- coding: utf-8 -*-
"""dog vs cat image classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MrQF4sUNoquTVEkm-8C5x7q1IC2w-KXl
"""

!wget https://download.microsoft.com/download/3/E/1/3E1C3F21-ECDB-4869-8368-6DEBA77B919F/kagglecatsanddogs_5340.zip

"""##download dataset

###

#unzip the dataset
"""

!unzip kagglecatsanddogs_5340.zip

"""#import modules

"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import warnings
import os
import tqdm
import random
from keras.preprocessing.image import load_img
warnings.filterwarnings('ignore')

"""creating dataframe for input and output

"""

input_path=[]
label=[]

for class_name in os.listdir("PetImages"):
  for path in os.listdir("PetImages/"+class_name):
    if class_name =='Cat':
      label.append(0)
    else:
      label.append(1)
    input_path.append(os.path.join("PetImages", class_name,path))
print(input_path[0],label[0])

df=pd.DataFrame()
df['images']=input_path
df['label']=label
df=df.sample(frac=1).reset_index(drop=True)
df.head()

"""Exploratory Data Analysis"""

# to display grid of images
plt.figure(figsize=(25,25))
temp=df[df['label']==1]['images']
start = random.randint(0,len(temp))
files = temp[start:start+25]

for index, file in enumerate(files):
  plt.subplot(5,5,index+1)
  img=load_img(file)
  img=np.array(img)
  plt.imshow(img)
  plt.title('Dogs')
  plt.axis('off')

plt.figure(figsize=(25,25))
temp=df[df['label']==0]['images']
start = random.randint(0,len(temp))
files = temp[start:start+25]

for index, file in enumerate(files):
  plt.subplot(5,5,index+1)
  img=load_img(file)
  img=np.array(img)
  plt.imshow(img)
  plt.title('Cat')
  plt.axis('off')

import seaborn as sns
sns.countplot(df['label'])

"""create DataGenerator for the Images

"""

df['label']=df['label'].astype('str')

df.head()

from sklearn.model_selection import train_test_split
train,test=train_test_split(df,test_size=0.2,random_state=42)

train.head()

from keras.preprocessing.image import ImageDataGenerator
train_generator=ImageDataGenerator(
    rescale=1./255,
    rotation_range=40,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode='nearest'
)
train_iterator=train_generator.flow_from_dataframe(
    df,
    x_col='images',
    y_col='label',
    target_size=(128,128),
    batch_size=512,
    class_mode='binary'

)

"""model creation"""

from keras import Sequential
from keras.layers import Conv2D,MaxPool2D,Flatten,Dense

model =Sequential([
    Conv2D(16, (3,3),activation= 'relu',input_shape=(128,128,3)),
    MaxPool2D((2,2)),
    Conv2D(32, (3,3), activation='relu'),
    MaxPool2D((2,2)),
    Conv2D(64, (3,3), activation='relu'),
    MaxPool2D((2,2)),
    Flatten(),
    Dense(512, activation='relu'),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam',loss='binary_cross_entropy',metrics=['accuracy'])
model.summary()

history= model.fit(train_iterator,epochs=50,validation_data=val)